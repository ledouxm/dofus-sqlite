name: Extract data and release

on:
  workflow_dispatch:

jobs:
  process-and-update:
    name: Extract and Process Game Data
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "7"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Cache pnpm dependencies
        uses: actions/cache@v3
        with:
          path: |
            parser/node_modules
            ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        working-directory: ./parser
        run: pnpm install

      - name: Extract data with cytrus
        working-directory: ./parser
        run: pnpm cytrus-v6 download --game dofus --release dofus3 --output temp/ --select **/StreamingAssets/Content/Data/**/*.bundle

      - name: Parse files to JSON
        working-directory: ./parser
        run: pnpm extract
        env:
          INPUT_FOLDER: temp/
          OUTPUT_FOLDER: json/

      - name: Update database
        working-directory: ./parser
        run: pnpm db
        env:
          DATABASE_URL: ./dofus.sqlite
          JSON_FOLDER: json/

      - name: Get current version
        working-directory: ./parser
        id: version
        run: echo "version=$(pnpm cytrus-v6 version --game dofus --release dofus3)" >> $env:GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        working-directory: ./parser
        with:
          files: |
            json/*
            dofus.sqlite
          tag_name: data-${{ steps.version.outputs.version }}
          name: Data Release ${{ steps.version.outputs.version }}
          body: |
            Automated data release for ${{ steps.version.outputs.version }}

            Contains:
            - Extracted JSON files
            - SQLite database
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
